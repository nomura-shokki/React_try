{"ast":null,"code":"// React, useStateのフック、axiosライブラリ、React RouterのLinkコンポーネントをインポート\nimport React,{useState}from\"react\";import axios from\"axios\";// HTTPリクエストを行うためのライブラリ\nimport{Link}from\"react-router-dom\";// React RouterのLinkコンポーネント\n// Appコンポーネントを定義\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// ReactのuseStateフックを使用してフォームデータを管理\nconst[formData,setFormData]=useState({name:\"\",// 名前\nmail:\"\",// メールアドレス\ngender:false,// 性別 (true or falseで表現)\nage:0,// 年齢\nbirthday:\"\"// 誕生日 (日付)\n});// フォームの入力値が変更された時に呼び出されるハンドラ関数\nconst handleChange=event=>{const{name,value,type,checked}=event.target;// イベントオブジェクトから関連情報を取得\nsetFormData({// 現在のフォームデータをスプレッド構文で展開\n...formData,// 入力フィールドのタイプに応じて値を設定 (checkboxの場合はchecked、それ以外ではvalueを使用)\n[name]:type===\"checkbox\"?checked:value});};// フォームが送信された時に呼び出されるハンドラ関数\nconst handleSubmit=event=>{event.preventDefault();// ブラウザのデフォルト挙動（ページリロード）を防ぐ\n// axiosを使ってバックエンドにデータをPOSTリクエストで送信\naxios.post(\"http://localhost:8000/api/try_models_new/\",formData)// ローカルのサーバーにデータ送信\n.then(response=>{console.log(response.data);// 成功時のレスポンスデータをコンソールに表示\nalert(\"データの送信が成功しました！\");// 成功メッセージをアラートで表示\n}).catch(error=>{console.error(error);// エラーメッセージをコンソールに表示\nalert(\"エラーが発生しました\");// エラーメッセージをアラートで表示\n});};// AppコンポーネントのUIを定義\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-primary me-2\",children:\"\\u65B0\\u898F\\u767B\\u9332\"}),/*#__PURE__*/_jsx(Link,{to:\"/data-list\",className:\"btn btn-secondary\",children:\"\\u30C7\\u30FC\\u30BF\\u4E00\\u89A7\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\u30E1\\u30F3\\u30D0\\u30FC\\u65B0\\u898F\\u767B\\u9332\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"form-label\",children:\"\\u6C0F\\u540D:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\"// テキスト入力フィールド\n,id:\"name\",name:\"name\"// フィールド名 (stateのキーと一致)\n,value:formData.name// フォームデータの値をバインド\n,onChange:handleChange// 値が変わるたびにhandleChange関数を呼ぶ\n,className:\"form-control\"// Bootstrapクラスでスタイリング\n})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mail\",className:\"form-label\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\"// Email入力フィールド (メール形式を期待)\n,id:\"mail\",name:\"mail\",value:formData.mail,onChange:handleChange,className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",className:\"form-label\",children:\"\\u6027\\u5225(\\u7537\\u6027\\u306A\\u3089ON):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\"// チェックボックス入力\n,id:\"gender\",name:\"gender\",checked:formData.gender// チェックされた状態をバインド\n,onChange:handleChange,className:\"form-check-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",className:\"form-label\",children:\"\\u5E74\\u9F62:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\"// 数値を入力するフィールド\n,id:\"age\",name:\"age\",value:formData.age,onChange:handleChange,className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"birthday\",className:\"form-label\",children:\"\\u751F\\u5E74\\u6708\\u65E5:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\"// 日付入力フィールド\n,id:\"birthday\",name:\"birthday\",value:formData.birthday,onChange:handleChange,className:\"form-control\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"\\u767B\\u9332\"})]})]});};export default App;// Appコンポーネントをエクスポート","map":{"version":3,"names":["React","useState","axios","Link","jsx","_jsx","jsxs","_jsxs","App","formData","setFormData","name","mail","gender","age","birthday","handleChange","event","value","type","checked","target","handleSubmit","preventDefault","post","then","response","console","log","data","alert","catch","error","className","children","to","onSubmit","htmlFor","id","onChange"],"sources":["C:/Users/54414/Desktop/try/React_try/react-app/src/App.js"],"sourcesContent":["// React, useStateのフック、axiosライブラリ、React RouterのLinkコンポーネントをインポート\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\"; // HTTPリクエストを行うためのライブラリ\r\nimport { Link } from \"react-router-dom\"; // React RouterのLinkコンポーネント\r\n\r\n// Appコンポーネントを定義\r\nconst App = () => {\r\n  // ReactのuseStateフックを使用してフォームデータを管理\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",       // 名前\r\n    mail: \"\",       // メールアドレス\r\n    gender: false,  // 性別 (true or falseで表現)\r\n    age: 0,         // 年齢\r\n    birthday: \"\",   // 誕生日 (日付)\r\n  });\r\n\r\n  // フォームの入力値が変更された時に呼び出されるハンドラ関数\r\n  const handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target; // イベントオブジェクトから関連情報を取得\r\n    setFormData({\r\n      // 現在のフォームデータをスプレッド構文で展開\r\n      ...formData,\r\n      // 入力フィールドのタイプに応じて値を設定 (checkboxの場合はchecked、それ以外ではvalueを使用)\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  // フォームが送信された時に呼び出されるハンドラ関数\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); // ブラウザのデフォルト挙動（ページリロード）を防ぐ\r\n    // axiosを使ってバックエンドにデータをPOSTリクエストで送信\r\n    axios\r\n      .post(\"http://localhost:8000/api/try_models_new/\", formData) // ローカルのサーバーにデータ送信\r\n      .then((response) => {\r\n        console.log(response.data); // 成功時のレスポンスデータをコンソールに表示\r\n        alert(\"データの送信が成功しました！\"); // 成功メッセージをアラートで表示\r\n      })\r\n      .catch((error) => {\r\n        console.error(error); // エラーメッセージをコンソールに表示\r\n        alert(\"エラーが発生しました\"); // エラーメッセージをアラートで表示\r\n      });\r\n  };\r\n\r\n  // AppコンポーネントのUIを定義\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {/* フォームページとデータリストページへのナビゲーションリンク */}\r\n      <nav className=\"mb-4\">\r\n        {/* React RouterのLinkコンポーネント。クリック時に指定されたルートに移動 */}\r\n        <Link to=\"/\" className=\"btn btn-primary me-2\">新規登録</Link>\r\n        <Link to=\"/data-list\" className=\"btn btn-secondary\">データ一覧</Link>\r\n      </nav>\r\n\r\n      {/* フォームのタイトル */}\r\n      <h1>メンバー新規登録</h1>\r\n\r\n      {/* フォームの定義 */}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* 名前入力フィールド */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">\r\n            氏名:\r\n          </label>\r\n          <input\r\n            type=\"text\" // テキスト入力フィールド\r\n            id=\"name\" \r\n            name=\"name\" // フィールド名 (stateのキーと一致)\r\n            value={formData.name} // フォームデータの値をバインド\r\n            onChange={handleChange} // 値が変わるたびにhandleChange関数を呼ぶ\r\n            className=\"form-control\" // Bootstrapクラスでスタイリング\r\n          />\r\n        </div>\r\n\r\n        {/* メール入力フィールド */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"mail\" className=\"form-label\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\" // Email入力フィールド (メール形式を期待)\r\n            id=\"mail\"\r\n            name=\"mail\"\r\n            value={formData.mail}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        {/* 性別入力フィールド (チェックボックス) */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"gender\" className=\"form-label\">\r\n            性別(男性ならON):\r\n          </label>\r\n          <input\r\n            type=\"checkbox\" // チェックボックス入力\r\n            id=\"gender\"\r\n            name=\"gender\"\r\n            checked={formData.gender} // チェックされた状態をバインド\r\n            onChange={handleChange}\r\n            className=\"form-check-input\"\r\n          />\r\n        </div>\r\n\r\n        {/* 年齢入力フィールド */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"age\" className=\"form-label\">\r\n            年齢:\r\n          </label>\r\n          <input\r\n            type=\"number\" // 数値を入力するフィールド\r\n            id=\"age\"\r\n            name=\"age\"\r\n            value={formData.age}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        {/* 誕生日入力フィールド */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"birthday\" className=\"form-label\">\r\n            生年月日:\r\n          </label>\r\n          <input\r\n            type=\"date\" // 日付入力フィールド\r\n            id=\"birthday\"\r\n            name=\"birthday\"\r\n            value={formData.birthday}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        {/* 送信ボタン */}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          登録\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App; // Appコンポーネントをエクスポート"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}