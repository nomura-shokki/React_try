{"ast":null,"code":"import React,{useState,useEffect}from\"react\";// Reactコンポーネントを作成する際に必要な関数をインポート\nimport axios from\"axios\";// HTTPリクエストを行うためのライブラリをインポート\nimport{Link}from\"react-router-dom\";// React RouterのLinkコンポーネント\n// DataListコンポーネントを定義\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataList=()=>{// Reactのstate（状態）を利用してデータ、ローディング状態、エラー状態を管理\nconst[data,setData]=useState([]);// データの初期状態を空の配列としてセット\nconst[loading,setLoading]=useState(true);// ローディング状態を管理（初期値はtrue＝読み込み中）\nconst[error,setError]=useState(null);// エラー状態を管理（初期値はnull＝エラーなし）\n// useEffectフックを使用してコンポーネントの描画後に実行される非同期処理を定義\nuseEffect(()=>{// DjangoアプリケーションのAPIからデータを取得するHTTPリクエスト\n// axiosライブラリを使用してGETリクエストを実行する\naxios.get(\"http://localhost:8000/try_models_list/\")// APIエンドポイントを指定（DjangoのREST APIからデータ取得）\n.then(response=>{setData(response.data);// レスポンスデータをstateに保存\nsetLoading(false);// ローディング状態をfalseに設定（データ取得完了）\n}).catch(err=>{setError(err.message);// エラーメッセージをstateに保存（例えば、サーバーエラーやネットワークエラー）\nsetLoading(false);// ローディング状態をfalseに設定（エラーが発生して完了した）\n});},[]);// 空の依存配列を指定して、コンポーネントの初回レンダリング時にのみこの処理を実行\n// ローディング状態（データを読み込んでいる最中）の画面表示\nif(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// 読み込み中であることをユーザーに通知（シンプルなテキスト）\n}// エラーが発生した場合の画面表示\nif(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});// エラー内容を表示（具体的なエラーメッセージを含む）\n}// 最終的なデータ表示部分\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[\" \",/*#__PURE__*/_jsxs(\"nav\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-primary me-2\",children:\"\\u65B0\\u898F\\u767B\\u9332\"}),/*#__PURE__*/_jsx(Link,{to:\"/data-list\",className:\"btn btn-secondary\",children:\"\\u30C7\\u30FC\\u30BF\\u4E00\\u89A7\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\u30C7\\u30FC\\u30BF\\u4E00\\u89A7\"}),\" \",data.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No data found.\"})// データが空の場合の通知表示（ユーザーに何もデータがないことを知らせる）\n:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered\",children:[\" \",/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6C0F\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6027\\u5225\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5E74\\u9F62\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u751F\\u5E74\\u6708\\u65E5\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u7DE8\\u96C6\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u524A\\u9664\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map(item=>/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",/*#__PURE__*/_jsx(\"td\",{children:item.id}),\" \",/*#__PURE__*/_jsx(\"td\",{children:item.name}),\" \",/*#__PURE__*/_jsx(\"td\",{children:item.mail}),\" \",/*#__PURE__*/_jsx(\"td\",{children:item.gender?\"男性\":\"女性\"}),\" \",/*#__PURE__*/_jsx(\"td\",{children:item.age}),\" \",/*#__PURE__*/_jsx(\"td\",{children:item.birthday}),\" \",/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/edit/${item.id}`,children:\"\\u7DE8\\u96C6\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/delete/${item.id}`,children:\"\\u524A\\u9664\"})})]},item.id))})]})]});};// コンポーネントをエクスポートして他のファイルで利用可能にする\nexport default DataList;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsx","_jsx","jsxs","_jsxs","DataList","data","setData","loading","setLoading","error","setError","get","then","response","catch","err","message","children","className","to","length","map","item","id","name","mail","gender","age","birthday"],"sources":["C:/Users/54414/Desktop/try/React_try/react-app/src/DataList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; // Reactコンポーネントを作成する際に必要な関数をインポート\r\nimport axios from \"axios\"; // HTTPリクエストを行うためのライブラリをインポート\r\nimport { Link } from \"react-router-dom\"; // React RouterのLinkコンポーネント\r\n\r\n// DataListコンポーネントを定義\r\nconst DataList = () => {\r\n  // Reactのstate（状態）を利用してデータ、ローディング状態、エラー状態を管理\r\n  const [data, setData] = useState([]); // データの初期状態を空の配列としてセット\r\n  const [loading, setLoading] = useState(true); // ローディング状態を管理（初期値はtrue＝読み込み中）\r\n  const [error, setError] = useState(null); // エラー状態を管理（初期値はnull＝エラーなし）\r\n\r\n  // useEffectフックを使用してコンポーネントの描画後に実行される非同期処理を定義\r\n  useEffect(() => {\r\n    // DjangoアプリケーションのAPIからデータを取得するHTTPリクエスト\r\n    // axiosライブラリを使用してGETリクエストを実行する\r\n    axios\r\n      .get(\"http://localhost:8000/try_models_list/\") // APIエンドポイントを指定（DjangoのREST APIからデータ取得）\r\n      .then((response) => {\r\n        setData(response.data); // レスポンスデータをstateに保存\r\n        setLoading(false); // ローディング状態をfalseに設定（データ取得完了）\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message); // エラーメッセージをstateに保存（例えば、サーバーエラーやネットワークエラー）\r\n        setLoading(false); // ローディング状態をfalseに設定（エラーが発生して完了した）\r\n      });\r\n  }, []); // 空の依存配列を指定して、コンポーネントの初回レンダリング時にのみこの処理を実行\r\n\r\n  // ローディング状態（データを読み込んでいる最中）の画面表示\r\n  if (loading) {\r\n    return <div>Loading...</div>; // 読み込み中であることをユーザーに通知（シンプルなテキスト）\r\n  }\r\n\r\n  // エラーが発生した場合の画面表示\r\n  if (error) {\r\n    return <div>Error: {error}</div>; // エラー内容を表示（具体的なエラーメッセージを含む）\r\n  }\r\n\r\n  // 最終的なデータ表示部分\r\n  return (\r\n    <div className=\"container mt-4\"> {/* Bootstrapのスタイルを適用するためのコンテナクラス */}\r\n      {/* フォームページとデータリストページへのナビゲーションリンク */}\r\n      <nav className=\"mb-4\">\r\n        {/* React RouterのLinkコンポーネント。クリック時に指定されたルートに移動 */}\r\n        <Link to=\"/\" className=\"btn btn-primary me-2\">新規登録</Link>\r\n        <Link to=\"/data-list\" className=\"btn btn-secondary\">データ一覧</Link>\r\n      </nav>\r\n      <h1>データ一覧</h1> {/* ページタイトルを表示 */}\r\n      {data.length === 0 ? (\r\n        <p>No data found.</p> // データが空の場合の通知表示（ユーザーに何もデータがないことを知らせる）\r\n      ) : (\r\n        <table className=\"table table-bordered\"> {/* Bootstrapのスタイルを適用したテーブル */}\r\n          <thead>\r\n            <tr>\r\n              {/* テーブルのヘッダー部分を定義 */}\r\n              <th>ID</th>\r\n              <th>氏名</th>\r\n              <th>Email</th>\r\n              <th>性別</th>\r\n              <th>年齢</th>\r\n              <th>生年月日</th>\r\n              <th>編集</th>\r\n              <th>削除</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* データの各項目をテーブルの行としてマッピング */}\r\n            {data.map((item) => (\r\n              <tr key={item.id}> {/* 各データ項目を行として表示。ユニークなキーとしてIDを設定 */}\r\n                <td>{item.id}</td> {/* ID項目を表示 */}\r\n                <td>{item.name}</td> {/* Name（名前）項目を表示 */}\r\n                <td>{item.mail}</td> {/* Mail（メールアドレス）項目を表示 */}\r\n                <td>{item.gender ? \"男性\" : \"女性\"}</td> {/* Gender（性別）を表示。trueならMale、falseならFemale */}\r\n                <td>{item.age}</td> {/* Age（年齢）項目を表示 */}\r\n                <td>{item.birthday}</td> {/* Birthday（誕生日）項目を表示 */}\r\n                <td><Link to={`/edit/${item.id}`}>編集</Link></td>\r\n                <td><Link to={`/delete/${item.id}`}>削除</Link></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// コンポーネントをエクスポートして他のファイルで利用可能にする\r\nexport default DataList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}